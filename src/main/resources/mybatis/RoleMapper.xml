<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.peashoot.blog.batis.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.peashoot.blog.batis.entity.RoleDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="roleName" jdbcType="VARCHAR" property="roleName"/>
        <result column="permissions" jdbcType="VARCHAR" property="permissions"/>
        <result column="insertUserId" jdbcType="INTEGER" property="insertUserId"/>
        <result column="insertTime" jdbcType="BIGINT" property="insertTime"/>
        <result column="updateUserId" jdbcType="INTEGER" property="updateUserId"/>
        <result column="updateTime" jdbcType="BIGINT" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, roleName, permissions, insertUserId, insertTime, updateUserId, updateTime
    </sql>
    <sql id="Left_Join_List">
        r.id, r.roleName, r.permissions, r.insertUserId, r.insertTime, r.updateUserId, r.updateTime, i.id       "insertUser.id",
        i.username "insertUser.username", i.nickName "insertUser.nickName", i.email    "insertUser.email", u.id       "updateUser.id",
        u.nickName "updateUser.username", i.username "updateUser.nickName", i.email    "updateUser.email"
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Left_Join_List"/>
        from bg_role r
                 left join bg_sysuser i on (r.insertUserId = i.id)
                 left join bg_sysuser u on (r.insertUserId = u.id)
        where r.id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultType="com.peashoot.blog.batis.entity.RoleDO">
        select
        <include refid="Left_Join_List"/>
        from bg_role r
                 left join bg_sysuser i on (r.insertUserId = i.id)
                 left join bg_sysuser u on (r.insertUserId = u.id)
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from bg_role
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteRangeByPrimaryKeys">
        delete from bg_role
        where id in (
        <foreach collection="roleIds" item="id" index="index" separator=",">
            #{id,jdbcType=INTEGER}
        </foreach>
        )
    </delete>
    <insert id="insert" parameterType="com.peashoot.blog.batis.entity.RoleDO">
        insert into bg_role (id, roleName, permissions,
                             insertUserId, insertTime, updateUserId,
                             updateTime)
        values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR},
                #{permissions,jdbcType=VARCHAR, typeHandler=com.peashoot.blog.batis.converter.JsonTypeHandler},
                #{insertUserId,jdbcType=INTEGER}, #{insertTime,jdbcType=BIGINT}, #{updateUserId,jdbcType=INTEGER},
                #{updateTime,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.peashoot.blog.batis.entity.RoleDO">
        insert into bg_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleName != null">
                roleName,
            </if>
            <if test="permissions != null">
                permissions,
            </if>
            <if test="insertUserId != null">
                insertUserId,
            </if>
            <if test="insertTime != null">
                insertTime,
            </if>
            <if test="updateUserId != null">
                updateUserId,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="permissions != null">
                #{permissions,jdbcType=VARCHAR, typeHandler=com.peashoot.blog.batis.converter.JsonTypeHandler},
            </if>
            <if test="insertUserId != null">
                #{insertUserId,jdbcType=INTEGER},
            </if>
            <if test="insertTime != null">
                #{insertTime,jdbcType=BIGINT},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.peashoot.blog.batis.entity.RoleDO">
        update bg_role
        <set>
            <if test="roleName != null">
                roleName = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="permissions != null">
                permissions =
                #{permissions,jdbcType=VARCHAR,typeHandler=com.peashoot.blog.batis.converter.JsonTypeHandler},
            </if>
            <if test="insertUserId != null">
                insertUserId = #{insertUserId,jdbcType=INTEGER},
            </if>
            <if test="insertTime != null">
                insertTime = #{insertTime,jdbcType=BIGINT},
            </if>
            <if test="updateUserId != null">
                updateUserId = #{updateUserId,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.peashoot.blog.batis.entity.RoleDO">
        update bg_role
        set roleName     = #{roleName,jdbcType=VARCHAR},
            permissions  = #{permissions,jdbcType=VARCHAR,typeHandler=com.peashoot.blog.batis.converter.JsonTypeHandler},
            insertUserId = #{insertUserId,jdbcType=INTEGER},
            insertTime   = #{insertTime,jdbcType=BIGINT},
            updateUserId = #{updateUserId,jdbcType=INTEGER},
            updateTime   = #{updateTime,jdbcType=BIGINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByRoleName" parameterType="java.lang.String" resultType="com.peashoot.blog.batis.entity.RoleDO">
        select
        <include refid="Left_Join_List"/>
        from bg_role r
                 left join bg_sysuser i on (r.insertUserId = i.id)
                 left join bg_sysuser u on (r.insertUserId = u.id)
        where r.roleName = #{roleName,jdbcType=VARCHAR}
    </select>
</mapper>