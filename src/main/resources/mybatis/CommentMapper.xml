<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.peashoot.blog.batis.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="com.peashoot.blog.batis.entity.CommentDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="visitorId" jdbcType="BIGINT" property="visitorId"/>
        <result column="articleId" jdbcType="VARCHAR" property="articleId"/>
        <result column="commentTime" jdbcType="BIGINT" property="commentTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="anonymous" jdbcType="BIT" property="anonymous"/>
        <result column="supportCount" jdbcType="INTEGER" property="supportCount"/>
        <result column="againstCount" jdbcType="INTEGER" property="againstCount"/>
        <result column="commentTo" jdbcType="BIGINT" property="commentTo"/>
    </resultMap>
    <resultMap id="JoinVisitorMap" type="com.peashoot.blog.batis.entity.CommentDO" extends="BaseResultMap">
        <result column="visitor" jdbcType="VARCHAR" property="visitorName"/>
        <result column="nickName" jdbcType="VARCHAR" property="sysUserNickname"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, visitorId, articleId, commentTime, status, anonymous, supportCount, againstCount,
        commentTo, comment
    </sql>
    <sql id="Left_Join_List">
        c.id, c.visitorId, c.articleId, c.commentTime, c.status, c.anonymous, c.supportCount, c.againstCount,
        c.commentTo, c.comment, v.visitor, u.nickName
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Left_Join_List"/>
        from bg_comment c
        left join bg_visitor v on c.visitorId=v.id
        left join bg_sysuser u on v.userId=u.id
        where c.id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Left_Join_List"/>
        from bg_comment c
        left join bg_visitor v on c.visitorId=v.id
        left join bg_sysuser u on v.userId=u.id
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from bg_comment
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteRangeByPrimaryKeys">
        delete from bg_comment
        where id in (
        <foreach collection="commentIds" item="id" index="index" separator=",">
            #{id,jdbcType=BIGINT}
        </foreach>
        )
    </delete>
    <insert id="insert" parameterType="com.peashoot.blog.batis.entity.CommentDO">
        insert into bg_comment (id, visitorId, articleId,
                                commentTime, status, anonymous,
                                supportCount, againstCount, commentTo,
                                comment)
        values (#{id,jdbcType=BIGINT}, #{visitorId,jdbcType=BIGINT}, #{articleId,jdbcType=VARCHAR},
                #{commentTime,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{anonymous,jdbcType=BIT},
                #{supportCount,jdbcType=INTEGER}, #{againstCount,jdbcType=INTEGER}, #{commentTo,jdbcType=INTEGER},
                #{comment,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.peashoot.blog.batis.entity.CommentDO">
        insert into bg_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="visitorId != null">
                visitorId,
            </if>
            <if test="articleId != null">
                articleId,
            </if>
            <if test="commentTime != null">
                commentTime,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="anonymous != null">
                anonymous,
            </if>
            <if test="supportCount != null">
                supportCount,
            </if>
            <if test="againstCount != null">
                againstCount,
            </if>
            <if test="commentTo != null">
                commentTo,
            </if>
            <if test="comment != null">
                comment,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="visitorId != null">
                #{visitorId,jdbcType=BIGINT},
            </if>
            <if test="articleId != null">
                #{articleId,jdbcType=VARCHAR},
            </if>
            <if test="commentTime != null">
                #{commentTime,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="anonymous != null">
                #{anonymous,jdbcType=BIT},
            </if>
            <if test="supportCount != null">
                #{supportCount,jdbcType=INTEGER},
            </if>
            <if test="againstCount != null">
                #{againstCount,jdbcType=INTEGER},
            </if>
            <if test="commentTo != null">
                #{commentTo,jdbcType=INTEGER},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.peashoot.blog.batis.entity.CommentDO">
        update bg_comment
        <set>
            <if test="visitorId != null">
                visitorId = #{visitorId,jdbcType=BIGINT},
            </if>
            <if test="articleId != null">
                articleId = #{articleId,jdbcType=VARCHAR},
            </if>
            <if test="commentTime != null">
                commentTime = #{commentTime,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="anonymous != null">
                anonymous = #{anonymous,jdbcType=BIT},
            </if>
            <if test="supportCount != null">
                supportCount = #{supportCount,jdbcType=INTEGER},
            </if>
            <if test="againstCount != null">
                againstCount = #{againstCount,jdbcType=INTEGER},
            </if>
            <if test="commentTo != null">
                commentTo = #{commentTo,jdbcType=INTEGER},
            </if>
            <if test="comment != null">
                comment = #{comment,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.peashoot.blog.batis.entity.CommentDO">
        update bg_comment
        set visitorId    = #{visitorId,jdbcType=BIGINT},
            articleId    = #{articleId,jdbcType=VARCHAR},
            commentTime  = #{commentTime,jdbcType=BIGINT},
            status       = #{status,jdbcType=INTEGER},
            anonymous    = #{anonymous,jdbcType=BIT},
            supportCount = #{supportCount,jdbcType=INTEGER},
            againstCount = #{againstCount,jdbcType=INTEGER},
            commentTo    = #{commentTo,jdbcType=INTEGER},
            comment      = #{comment,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="listPagedComments" resultMap="BaseResultMap">
        select
        <include refid="Left_Join_List"/>
        from bg_comment c
        left join bg_visitor v on c.visitorId=v.id
        left join bg_sysuser u on v.userId=u.id
        where 1=1
        <if test="@com.peashoot.blog.util.StringUtils@isNotNullOrEmpty(articleId)">
            and c.articleId=#{articleId, jdbcType=VARCHAR}
        </if>
        order by c.id limit #{indexStart, jdbcType=INTEGER},#{selectCount, jdbcType=INTEGER}
    </select>
    <select id="countTotalRecords" resultType="java.lang.Integer">
        select count(1)
        from bg_comment
        where 1=1
        <if test="@com.peashoot.blog.util.StringUtils@isNotNullOrEmpty(articleId)">
            and articleId=#{articleId, jdbcType=VARCHAR}
        </if>
    </select>
    <select id="selectByPrimaryKeyForUpdate" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Left_Join_List"/>
        from bg_comment c
        left join bg_visitor v on c.visitorId=v.id
        left join bg_sysuser u on v.userId=u.id
        where c.id = #{id,jdbcType=BIGINT} for update
    </select>
</mapper>